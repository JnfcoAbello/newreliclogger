{"version":3,"sources":["../../../projects/relic-logger/src/lib/relic-logger.service.ts","../../../projects/relic-logger/src/lib/relic-logger.component.ts","../../../projects/relic-logger/src/lib/relic-logger.module.ts"],"names":["RelicLoggerService","http","this","prototype","newRelicTest","message","appSection","workspaceID","uuid","date","Date","now","headers","HttpHeaders","Content-Type","X-License-Key","msg","length","substring","body","channel","datetime.date","toDateString","datetime.timezone","datetime.timezone_type","timestamp","device_uuid","workspace_uuid","app_section","app","console","log","post","Injectable","args","providedIn","HttpClient","RelicLoggerComponent","svc","ngOnInit","subscribe","data","Component","selector","template","NgModule","declarations","imports","exports"],"mappings":"sZASE,SAAAA,EAAoBC,GAAAC,KAAAD,KAAAA,SAEbD,EAAAG,UAAAC,aAAA,SAAcC,EAAgBC,EAAmBC,EAAsBC,GAC5E,IAAMC,EAAOC,KAAKC,MAEZC,EAAU,IAAIC,EAAAA,YAAY,CAC5BC,eAAgB,mBAChBC,gBAAiB,6CAEfC,EAAMX,EAAQY,OAAS,IAAMZ,EAAQa,UAAU,EAAE,KAAOb,EACxDc,EAAO,CACTC,QAAW,MACXC,gBAAiB,IAAIX,KAAKD,GAAMa,eAChCC,oBAAqB,MACrBC,yBAA0B,EAC1BnB,QAAWW,EACXS,UAAahB,EACbiB,YAAelB,EACfmB,eAAkBpB,EAClBqB,YAAetB,EACfuB,IAAO,cAIX,OADAC,QAAQC,IAAI,SAASZ,GACdjB,KAAKD,KAAK+B,KAAK,sCAAsCb,EAAK,CAAEP,QAAOA,mJA7B7EqB,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,oDAHLC,EAAAA,+BCaP,SAAAC,EAAoBC,GAAApC,KAAAoC,IAAAA,SAEpBD,EAAAlC,UAAAoC,SAAA,WACErC,KAAKoC,IAAIlC,aAAa,eAAe,iBAAiB,gBAAgB,gBAAgBoC,WAAW,SAAAC,GAC/FX,QAAQC,IAAI,SAAWU,gCAhB5BC,EAAAA,UAASR,KAAA,CAAC,CACTS,SAAU,mBACVC,SAAU,kGAJH5C,WCcT,iCAVC6C,EAAAA,SAAQX,KAAA,CAAC,CACRY,aAAc,CACZT,GAEFU,QAAS,GAETC,QAAS,CACPX","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RelicLoggerService {\n\n  constructor(private http: HttpClient) { }\n\n  public newRelicTest (message: string,appSection: string,workspaceID : string, uuid: string): Observable<any> {\n    const date = Date.now();\n    //const workspaceID = this.userSession.workspaceID\n    const headers = new HttpHeaders({\n        'Content-Type': 'application/json',\n        'X-License-Key': 'f5bd14bc79965831342752df36088696FFFFNRAL'\n    });\n    const msg = message.length > 255 ? message.substring(0,255) : message;\n    const body = {\n        \"channel\": \"DEV\",\n        \"datetime.date\": new Date(date).toDateString(),\n        \"datetime.timezone\": \"UTC\",\n        \"datetime.timezone_type\": 3,\n        \"message\": msg,\n        \"timestamp\": date,\n        \"device_uuid\": uuid,\n        \"workspace_uuid\": workspaceID,\n        \"app_section\": appSection,\n        \"app\": \"app_retail\"\n\n    }\n    console.log(\"BODY: \",body);\n    return this.http.post('https://log-api.newrelic.com/log/v1',body,{ headers });\n}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { RelicLoggerService } from './relic-logger.service';\n\n@Component({\n  selector: 'lib-relic-logger',\n  template: `\n    <p>\n      relic-logger works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class RelicLoggerComponent implements OnInit {\n\n  constructor(private svc: RelicLoggerService) { }\n\n  ngOnInit(): void {\n    this.svc.newRelicTest(\"message test\",\"plugin section\",\"vghhcvujk65jj\",\"gddgddfgfcbb\").subscribe( data => {\n      console.log(\"data: \" + data);\n    })\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RelicLoggerComponent } from './relic-logger.component';\n\n\n\n@NgModule({\n  declarations: [\n    RelicLoggerComponent\n  ],\n  imports: [\n  ],\n  exports: [\n    RelicLoggerComponent\n  ]\n})\nexport class RelicLoggerModule { }\n"]}