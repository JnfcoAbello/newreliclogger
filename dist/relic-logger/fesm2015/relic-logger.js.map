{"version":3,"file":"relic-logger.js","sources":["../../../projects/relic-logger/src/lib/relic-logger.service.ts","../../../projects/relic-logger/src/lib/relic-logger.component.ts","../../../projects/relic-logger/src/lib/relic-logger.module.ts","../../../projects/relic-logger/src/public-api.ts","../../../projects/relic-logger/src/relic-logger.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RelicLoggerService {\n\n  constructor(private http: HttpClient) { }\n\n  public newRelicTest (message: string,appSection: string,workspaceID : string, uuid: string): Observable<any> {\n    const date = Date.now();\n    //const workspaceID = this.userSession.workspaceID\n    const headers = new HttpHeaders({\n        'Content-Type': 'application/json',\n        'X-License-Key': 'f5bd14bc79965831342752df36088696FFFFNRAL'\n    });\n    const msg = message.length > 255 ? message.substring(0,255) : message;\n    const body = {\n        \"channel\": \"DEV\",\n        \"datetime.date\": new Date(date).toDateString(),\n        \"datetime.timezone\": \"UTC\",\n        \"datetime.timezone_type\": 3,\n        \"message\": msg,\n        \"timestamp\": date,\n        \"device_uuid\": uuid,\n        \"workspace_uuid\": workspaceID,\n        \"app_section\": appSection,\n        \"app\": \"app_retail\"\n\n    }\n    console.log(\"BODY: \",body);\n    return this.http.post('https://log-api.newrelic.com/log/v1',body,{ headers });\n}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { RelicLoggerService } from './relic-logger.service';\n\n@Component({\n  selector: 'lib-relic-logger',\n  template: `\n    <p>\n      relic-logger works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class RelicLoggerComponent implements OnInit {\n\n  constructor(private svc: RelicLoggerService) { }\n\n  ngOnInit(): void {\n    this.svc.newRelicTest(\"message test\",\"plugin section\",\"vghhcvujk65jj\",\"gddgddfgfcbb\").subscribe( data => {\n      console.log(\"data: \" + data);\n    })\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RelicLoggerComponent } from './relic-logger.component';\n\n\n\n@NgModule({\n  declarations: [\n    RelicLoggerComponent\n  ],\n  imports: [\n  ],\n  exports: [\n    RelicLoggerComponent\n  ]\n})\nexport class RelicLoggerModule { }\n","/*\n * Public API Surface of relic-logger\n */\n\nexport * from './lib/relic-logger.service';\nexport * from './lib/relic-logger.component';\nexport * from './lib/relic-logger.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;MAOa,kBAAkB;IAE7B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;KAAK;IAElC,YAAY,CAAE,OAAe,EAAC,UAAkB,EAAC,WAAoB,EAAE,IAAY;QACxF,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;;QAExB,MAAM,OAAO,GAAG,IAAI,WAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,0CAA0C;SAC9D,CAAC,CAAC;QACH,MAAM,GAAG,GAAG,OAAO,CAAC,MAAM,GAAG,GAAG,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,EAAC,GAAG,CAAC,GAAG,OAAO,CAAC;QACtE,MAAM,IAAI,GAAG;YACT,SAAS,EAAE,KAAK;YAChB,eAAe,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,YAAY,EAAE;YAC9C,mBAAmB,EAAE,KAAK;YAC1B,wBAAwB,EAAE,CAAC;YAC3B,SAAS,EAAE,GAAG;YACd,WAAW,EAAE,IAAI;YACjB,aAAa,EAAE,IAAI;YACnB,gBAAgB,EAAE,WAAW;YAC7B,aAAa,EAAE,UAAU;YACzB,KAAK,EAAE,YAAY;SAEtB,CAAA;QACD,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAC,IAAI,CAAC,CAAC;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,qCAAqC,EAAC,IAAI,EAAC,EAAE,OAAO,EAAE,CAAC,CAAC;KACjF;;;;YA9BA,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;YAJQ,UAAU;;;MCWN,oBAAoB;IAE/B,YAAoB,GAAuB;QAAvB,QAAG,GAAH,GAAG,CAAoB;KAAK;IAEhD,QAAQ;QACN,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,cAAc,EAAC,gBAAgB,EAAC,eAAe,EAAC,cAAc,CAAC,CAAC,SAAS,CAAE,IAAI;YACnG,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC;SAC9B,CAAC,CAAA;KACH;;;YAlBF,SAAS,SAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,QAAQ,EAAE;;;;GAIT;aAGF;;;YAXQ,kBAAkB;;;MCcd,iBAAiB;;;YAV7B,QAAQ,SAAC;gBACR,YAAY,EAAE;oBACZ,oBAAoB;iBACrB;gBACD,OAAO,EAAE,EACR;gBACD,OAAO,EAAE;oBACP,oBAAoB;iBACrB;aACF;;;ACdD;;;;ACAA;;;;;;"}